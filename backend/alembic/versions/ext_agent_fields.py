"""add extended agent fields and review model

Revision ID: add_extended_agent_fields_and_review_model
Revises: 38aff062c8b4
Create Date: 2024-01-21 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ext_agent_fields'
down_revision: Union[str, None] = '38aff062c8b4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Add extended fields to agents table
    op.add_column('agents', sa.Column('website_url', sa.String(length=500), nullable=True))
    op.add_column('agents', sa.Column('one_liner', sa.Text(), nullable=True))
    op.add_column('agents', sa.Column('tags', sa.Text(), nullable=True))
    op.add_column('agents', sa.Column('detailed_description', sa.Text(), nullable=True))
    op.add_column('agents', sa.Column('pricing_info', sa.Text(), nullable=True))

    # Add social data fields
    op.add_column('agents', sa.Column('average_rating', sa.Float(), nullable=False, server_default='0.0'))
    op.add_column('agents', sa.Column('total_ratings', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('agents', sa.Column('total_reviews', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('agents', sa.Column('total_favorites', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('agents', sa.Column('monthly_active_users', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('agents', sa.Column('annual_active_users', sa.Integer(), nullable=False, server_default='0'))

    # Add business data fields
    op.add_column('agents', sa.Column('annual_recurring_revenue', sa.Float(), nullable=False, server_default='0.0'))
    op.add_column('agents', sa.Column('monthly_recurring_revenue', sa.Float(), nullable=False, server_default='0.0'))
    op.add_column('agents', sa.Column('growth_rate', sa.Float(), nullable=False, server_default='0.0'))
    op.add_column('agents', sa.Column('traffic_rank', sa.Integer(), nullable=False, server_default='0'))

    # Create agent_reviews table
    op.create_table('agent_reviews',
        sa.Column('id', sa.Integer(), nullable=False, comment='评论ID'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='删除时间'),
        sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
        sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
        sa.Column('agent_id', sa.Integer(), nullable=False, comment='Agent ID'),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
        sa.Column('rating', sa.Float(), nullable=False, comment='评分 (1-5)'),
        sa.Column('title', sa.String(length=200), nullable=True, comment='评论标题'),
        sa.Column('content', sa.Text(), nullable=True, comment='评论内容'),
        sa.Column('is_verified_purchase', sa.Boolean(), nullable=False, server_default='false', comment='是否为验证购买'),
        sa.Column('helpful_count', sa.Integer(), nullable=False, server_default='0', comment='有用数'),
        sa.Column('is_featured', sa.Boolean(), nullable=False, server_default='false', comment='是否为精选评论'),
        sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        comment='Agent评论模型'
    )
    op.create_index(op.f('ix_agent_reviews_agent_id'), 'agent_reviews', ['agent_id'], unique=False)
    op.create_index(op.f('ix_agent_reviews_id'), 'agent_reviews', ['id'], unique=False)
    op.create_index(op.f('ix_agent_reviews_user_id'), 'agent_reviews', ['user_id'], unique=False)

    # Create agent_analytics table
    op.create_table('agent_analytics',
        sa.Column('id', sa.Integer(), nullable=False, comment='分析ID'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.Column('agent_id', sa.Integer(), nullable=False, comment='Agent ID'),
        sa.Column('date', sa.DateTime(), nullable=False, comment='日期'),
        sa.Column('period_type', sa.String(length=20), nullable=False, comment='周期类型 (daily/weekly/monthly)'),
        sa.Column('new_users', sa.Integer(), nullable=False, server_default='0', comment='新用户数'),
        sa.Column('active_users', sa.Integer(), nullable=False, server_default='0', comment='活跃用户数'),
        sa.Column('returning_users', sa.Integer(), nullable=False, server_default='0', comment='回访用户数'),
        sa.Column('total_conversations', sa.Integer(), nullable=False, server_default='0', comment='总对话数'),
        sa.Column('total_messages', sa.Integer(), nullable=False, server_default='0', comment='总消息数'),
        sa.Column('total_tokens_used', sa.Integer(), nullable=False, server_default='0', comment='总token使用量'),
        sa.Column('revenue', sa.Float(), nullable=False, server_default='0.0', comment='收入'),
        sa.Column('cost', sa.Float(), nullable=False, server_default='0.0', comment='成本'),
        sa.Column('average_response_time', sa.Float(), nullable=False, server_default='0.0', comment='平均响应时间'),
        sa.Column('success_rate', sa.Float(), nullable=False, server_default='0.0', comment='成功率'),
        sa.Column('satisfaction_score', sa.Float(), nullable=False, server_default='0.0', comment='满意度评分'),
        sa.Column('page_views', sa.Integer(), nullable=False, server_default='0', comment='页面浏览量'),
        sa.Column('unique_visitors', sa.Integer(), nullable=False, server_default='0', comment='独立访客数'),
        sa.Column('bounce_rate', sa.Float(), nullable=False, server_default='0.0', comment='跳出率'),
        sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
        sa.PrimaryKeyConstraint('id'),
        comment='Agent分析数据模型'
    )
    op.create_index(op.f('ix_agent_analytics_agent_id'), 'agent_analytics', ['agent_id'], unique=False)
    op.create_index(op.f('ix_agent_analytics_date'), 'agent_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_agent_analytics_id'), 'agent_analytics', ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop agent_analytics table
    op.drop_index(op.f('ix_agent_analytics_id'), table_name='agent_analytics')
    op.drop_index(op.f('ix_agent_analytics_date'), table_name='agent_analytics')
    op.drop_index(op.f('ix_agent_analytics_agent_id'), table_name='agent_analytics')
    op.drop_table('agent_analytics')

    # Drop agent_reviews table
    op.drop_index(op.f('ix_agent_reviews_user_id'), table_name='agent_reviews')
    op.drop_index(op.f('ix_agent_reviews_id'), table_name='agent_reviews')
    op.drop_index(op.f('ix_agent_reviews_agent_id'), table_name='agent_reviews')
    op.drop_table('agent_reviews')

    # Remove extended fields from agents table
    op.drop_column('agents', 'traffic_rank')
    op.drop_column('agents', 'growth_rate')
    op.drop_column('agents', 'monthly_recurring_revenue')
    op.drop_column('agents', 'annual_recurring_revenue')
    op.drop_column('agents', 'annual_active_users')
    op.drop_column('agents', 'monthly_active_users')
    op.drop_column('agents', 'total_favorites')
    op.drop_column('agents', 'total_reviews')
    op.drop_column('agents', 'total_ratings')
    op.drop_column('agents', 'average_rating')
    op.drop_column('agents', 'pricing_info')
    op.drop_column('agents', 'detailed_description')
    op.drop_column('agents', 'tags')
    op.drop_column('agents', 'one_liner')
    op.drop_column('agents', 'website_url')

    # ### end Alembic commands ###